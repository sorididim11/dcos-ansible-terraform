

- name: Check if already "{{ service_name }}" installed
  stat:
    path: /opt/mesosphere 
  register: is_mesos_installed


- name: Download the DC/OS installer from the NGINX Docker container
  get_url:
    url: "http://{{groups['dcos_bootstrap'][0]}}:{{dcos_bootstrap_port}}/dcos_install.sh"
    dest: /tmp/dcos_install.sh
    force: no #if yes, if it keeps downloading


- name: Install dcos {{ node_type }}
  become: yes
  command: "bash dcos_install.sh {{ node_type }}"
  args:
    chdir: /tmp
  when: is_mesos_installed.stat.exists == False


- name: Wait for mesos master running
  shell: "systemctl status dcos-mesos-master"
  register: result
  until: result.stdout.find("running") != -1
  retries: 1000
  delay: 30 # unit, second
  tags: upgrade-master
  changed_when: no
  when: node_type == "master"


# - name: Configure DC/OS for Proxy
#   tags: apply-proxy
#   become: yes
#   lineinfile: 
#     dest: /opt/mesosphere/etc/proxy.env
#     regexp: "{{item.regex}}"
#     line: "{{item.replace_with}}"
#   with_items:
#     - regex: ^http_proxy=
#       replace_with: "http_proxy={{proxy_env.http_proxy}}"
#     - regex: ^https_proxy=
#       replace_with: "https_proxy={{proxy_env.http_proxy}}"
#     - regex: ^no_proxy=
#       replace_with: "no_proxy={{proxy_env.no_proxy}}"
#   when: dcos_is_use_proxy == False and proxy_env.http_proxy is defined 


# - name: Restat dcos-cosmos
#   become: yes
#   systemd: name=dcos-cosmos state=restarted
#   changed_when: false  
#   when: dcos_is_use_proxy == False and node_type == "master" and proxy_env.http_proxy is defined 
#   tags: apply-proxy


  

