---
- set_fact: 
    auth_root: "{{ dcos_bootstrap_root_path }}/genconf/serve/auth"
    machine_fqdn: "{{ service.repository.dest_repo.url }}"
    registry_volume_path: "{{service.options.host_volume_path}}"
    portus_db_path: "{{service.options.portus_db_path}}"


- name: Install docker-compose
  become: yes
  pip: name=docker-compose state=present


- name: Check if dcoc/dist dir exists
  file:
    path: "{{auth_root}}/{{item}}"
    state: directory
  with_items: 
    - secrets
    - nginx
    - registry
    - portus


- copy:
    src: "{{item.from}}"
    dest: "{{auth_root}}/{{item.to}}"
  with_items:
    - { from: init, to: registry/init }
    - { from: registry-conf.yml, to: registry/config.yml  }
 

- template:
    src: "{{item.from}}"
    dest: "{{auth_root}}/{{item.to}}"
  with_items: 
    - { from: docker-compose.yml.j2, to: docker-compose.yml  }
    - { from: env.j2, to: .env }
    - { from: nginx.conf.j2, to: nginx/nginx.conf }
    - { from: config-local.yml.j2, to: portus/config-local.yml }
    - { from: openssl.cnf.j2, to: secrets/openssl.conf }
   

- name: Generate self-signed certificate for both auth and registry with common name, boostrap node IP address
  command: >
          openssl req -x509  -newkey rsa:4096 -nodes -sha256 -days 365
            -keyout portus.key   -out portus.crt
            -config {{auth_root}}/secrets/openssl.conf
  args:
    chdir: "{{auth_root}}/secrets"
    creates: "portus.crt"


- name: Run web container to distribute keys
  become: yes
  docker_container: 
    name: boot-nginx
    image: nginx
    restart_policy: unless-stopped
    state: started
    ports: "{{dcos_bootstrap_port}}:80"
    volumes: "{{ dcos_bootstrap_root_path }}/genconf/serve:/usr/share/nginx/html:ro"


- name: Insert crts, key to docker cert directory on each agent
  become: yes
  file:
    path: "/etc/docker/certs.d/{{machine_fqdn}}"
    state: directory
  delegate_to: "{{item}}"
  with_inventory_hostnames: 
    - dcos_slaves:dcos_slaves_public:dcos_bootstrap


- name: Download docker private certificate
  become: yes
  get_url:
    url: "http://{{groups['dcos_bootstrap'][0]}}:{{dcos_bootstrap_port}}/auth/secrets/portus.crt"
    dest: "/etc/docker/certs.d/{{machine_fqdn}}/ca.crt"
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public:dcos_bootstrap

# - name: Copy portus cert to /etc/pki/ca-trust/source/anchors
#   become: yes
#   copy:
#     remote_src: yes
#     src: "{{auth_root}}/secrets/portus.crt"
#     dest: /etc/pki/ca-trust/source/anchors/portus.crt


# - name: Update CA 
#   become: yes
#   command: update-ca-trust


- name: Run docker compose 
  become: yes
  command: docker-compose up -d
  args:
    chdir: "{{auth_root}}"

  # docker_service:
  #   project_src: "{{auth_root}}/docker-compose.yml"
  #   state: present