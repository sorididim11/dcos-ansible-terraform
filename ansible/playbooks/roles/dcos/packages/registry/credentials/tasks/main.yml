---


- name: Update /etc/hosts for registry 
  become: yes
  blockinfile:
    path: /etc/hosts
    block: |
        {{ groups['dcos_bootstrap'][0] }} {{ service.machine_fqdn }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
  delegate_to: "{{item}}"
  with_inventory_hostnames: 
    - dcos_slaves:dcos_slaves_public:dcos_bootstrap


- name: Create docker crt directory on each agent
  become: yes
  file:
    path: "/etc/docker/certs.d/{{service.machine_fqdn}}"
    state: directory
  delegate_to: "{{item}}"
  with_inventory_hostnames: 
    - dcos_slaves:dcos_slaves_public:dcos_bootstrap


- name:  Insert crt  to docker cert directory on each agent
  become: yes
  get_url:
    url: "http://{{groups['dcos_bootstrap'][0]}}:{{dcos_bootstrap_port}}/auth/secrets/portus.crt"
    dest: "/etc/docker/certs.d/{{service.machine_fqdn}}/ca.crt"
    force: yes
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public:dcos_bootstrap


- name: Copy portus cert to /etc/pki/ca-trust/source/anchors
  become: yes
  copy:
    remote_src: yes
    src: "/etc/docker/certs.d/{{service.machine_fqdn}}/ca.crt"
    dest: /etc/pki/ca-trust/source/anchors/portus.crt
    force: yes
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public:dcos_bootstrap


- name: Update CA 
  become: yes
  command: update-ca-trust
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public:dcos_bootstrap




- name: Log into docker registry
  become: yes
  docker_login:
    registry: "{{service.machine_fqdn}}"
    username: "{{service.admin.id}}"
    password: "{{service.admin.pwd}}"
    reauthorize: yes


- name: Archive credential of the registry 
  become: yes
  archive:
    path: ~/.docker
    dest: "{{ dcos_bootstrap_root_path }}/genconf/serve/auth/docker.tar.gz"
    format: tar
  tags: registry-post


- name: Download docker registry token 
  get_url:
    url: "{{dcos_bootstrap_url}}/auth/docker.tar.gz"
    dest: "{{ ansible_user_dir }}/docker.tar.gz"
    force: yes
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public


- name: Unarchive  docker.tar.gz
  unarchive:
      src: "{{ ansible_user_dir }}/docker.tar.gz"
      dest: /tmp
      remote_src: yes
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public


- name: Insert docker token to /etc/mesosphere/docker_credentials file
  become: yes
  copy:
    #content: "{{hostvars[groups['dcos_bootstrap'][0]].docker_token | to_nice_json}}"
    remote_src: yes
    src: /tmp/.docker/config.json
    dest: /etc/mesosphere/docker_credentials
    backup: yes
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public


- name: Restart dcos agent 
  become: yes
  systemd: name={{ (item in groups['dcos_slaves']) | ternary('dcos-mesos-slave', 'dcos-mesos-slave-public') }} state=restarted
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public
