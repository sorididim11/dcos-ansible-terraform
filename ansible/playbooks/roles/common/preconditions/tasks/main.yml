---

  - name: debug home dir 
    debug: 
      msg: "{{ ansible_user_dir }}, host: {{ansible_host}}"


  - name: Check Operation System disto, version
    assert:
      that: (ansible_distribution == "CentOS" and ansible_distribution_major_version == "7") or
          (ansible_distribution == "RedHat" and ansible_distribution_major_version == "7")
      msg: DC/OS supports only RedHat, CentOS


  - name: Set up ENV, DCOS_PRIVATE_IP for ip detect 
    lineinfile:
      dest: /etc/environment
      state: present
      regexp: "^{{item}}"
      line: "{{item}}={{ansible_host}}"
    with_items:
      - DCOS_PRIVATE_IP
      - DCOS_PUBLIC_IP


  - name: Set up ENV, DCOS_PUBLIC_IP for ip detect 
    lineinfile:
      dest: /etc/environment
      state: present
      regexp: '^DCOS_PUBLIC_IP'
      line: "DCOS_PUBLIC_IP={{hostvars[inventory_hostname].dcos_public_ip}}"
    when: hostvars[inventory_hostname].dcos_public_ip is defined


  # - name: Find prviate IP matched with ansible host 
  #   set_fact: 
  #     nic_name: "{{item}}"
  #   when: hostvars[inventory_hostname]['ansible_' + item].ipv4.address == ansible_host
  #   with_items: "{{ hostvars[inventory_hostname]['ansible_interfaces'] }}"
  

  - name: Allow 'wheel' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'


  - name: Disable dnsmasq, firewalld(known issue of docker)
    service:
      name: "{{item}}"
      state: stopped
      enabled: no
    register: service_ret
    with_items:
      - firewalld.service
      - dnsmasq.service
    failed_when: "service_ret|failed and ('not find' not in service_ret.msg)"

    
  - name: Add nogroup, docker to group 
    group: name={{item}} state=present
    with_items: 
      - nogroup
      - docker

  - name: Modify kernal params, watchdog_thresh, disable ipv6
    sysctl: name={{item.key}} value={{item.val}} state=present sysctl_file=/etc/sysctl.d/dcos_kernal.conf reload=yes
    with_items:
      - { key: net.ipv6.conf.all.disable_ipv6, val: 1}
      - { key: net.ipv6.conf.default.disable_ipv6, val: 1}
      - { key: kernel.watchdog_thresh, val: "{{watchdog_thresh}}" }


  # - name: Clean yum packages, metadata, dbcache, all and make new cache.   
  #   shell: yum clean packages metadata dbcache all && yum makecache
  #   args:
  #     warn: no

  - name: Install EPEL Repo
    yum: name=epel-release state=present update_cache=yes


  - name: Install required utils 
    yum: name={{item}} state=present update_cache=yes
    with_items:
      - tar
      - xz
      - unzip
      - curl 
      - ipset
      - ntp
      - python-pip


#for ansible docker module
  - name: Install required utils for ansible 
    pip: name=docker state=present


  - name: Enable ntpd
    systemd: name=ntpd.service state=restarted enabled=yes
    changed_when: False

# ansible selinux module requires libselinux-python & reboot required
  - name: Set selinux to "{{selinux_mode}}" mode.
    selinux: policy=targeted state={{selinux_mode}}
  

  - name: Enable overlayfs
    lineinfile: dest=/etc/modules-load.d/overlay.conf regexp="^overlay" line=overlay state=present create=yes
    when: inventory_hostname not in groups['dcos_bootstrap']


  - name: Load overyfs to kernel 
    modprobe: name=overlay state=present
    when: inventory_hostname not in groups['dcos_bootstrap']


  - name: Set DC/OS loacle, LANG=en_US.utf-8
    command: localectl set-locale LANG=en_US.utf-8 
    
  
  - name: Set DC/OS loacle, LC_ALL=en_US.utf-8
    lineinfile: dest=/etc/locale.conf line='LC_ALL=en_US.utf-8' state=present create=yes



    
    #lineinfile: dest=/etc/sysctl.d/kernel.watchdog_thresh.conf line='kernel.watchdog_thresh={{watchdog_thresh}}' state=present create=yes
    #when: watchdog_thresh is defined

  # - name: reboot for preconditions like overlay, selinux, locale 
  #   command: systemctl reboot
  #   delegate_to: {{item}}
  #   with_items: {{ grous['nodes']}}