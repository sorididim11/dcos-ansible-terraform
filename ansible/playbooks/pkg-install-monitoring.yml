--- 
- name: Install Monitoring platform
  gather_facts: False
  hosts: dcos_cli[0]
  vars_files: 
    - pkg-desc/monitoring.yml
  tags: ['pkg']
  # pre_tasks:
  #   -   sheLl: echo 'good bye'
  roles:
    - { role: dcos/packages/installer, service: "{{ services['cadvisor'] }}" }
    - { role: dcos/packages/installer, service: "{{ services['influxdb'] }}" }
    - { role: dcos/packages/installer, service: "{{ services['grafana'] }}" }
  post_tasks:
    - name: wait for influxdb to become ready
      wait_for:
        host: "{{ services['influxdb'].name }}.marathon.l4lb.thisdcos.directory"
        port: 8086
        state: started
        delay: 5
        connect_timeout: 15
        timeout: 30
      delegate_to: "{{ groups['dcos_masters'][0] }}"
      tags: conf
    # curl -G http://localhost:8086/query --data-urlencode "q=CREATE DATABASE mydb"
    - name: Create database, cadvisor in influxdb
      uri:
        url: "http://{{ services['influxdb'].name }}.marathon.l4lb.thisdcos.directory:8086/query?q={{ 'CREATE DATABASE cadvisor' | urlencode }}"
        method: GET
        validate_certs: False
        body_format: json
        body: 
      delegate_to: "{{ groups['dcos_masters'][0] }}"
      tags: conf

    - name: Register Data soruce to Grafana
      uri:
        url: "http://{{ groups['dcos_slaves_public'][0] }}:13000/api/datasources"
        method: POST
        body_format: json
        body: 
          name: "{{ services['influxdb'].name }}"
          type: influxdb
          url: "http://{{ services['influxdb'].name }}.marathon.l4lb.thisdcos.directory:8086"
          access: proxy
          basicAuth: true
          basicAuthUser: admin
          basicAuthPassword: "{{ services['grafana'].options.password }}"      
        # status_code: 202, 409
      tags: conf
  environment: "{{ proxy_env }}"
